etapa = 0
motor_dir = 0
motor_esq = 0
count=0

def control(front_right, front_left, back_right, back_left, distance_right, distance_left):
    global motor_dir
    global motor_esq
    global etapa

    if front_right < 0.25 or front_left < 0.25:
        if etapa == 0:
            if distance_right == 300: ## dá ré e procura oponente
                motor_dir = -40
                motor_esq = 40
                etapa = 1

        elif distance_right < 300 and distance_left == 300: ## alinha acelerando esquerdo
            motor_dir = -1
            motor_esq = 40
        elif distance_right == 300 and distance_left < 300: ## alinha acelerando direita
            motor_dir = 40
            motor_esq = -1
        elif distance_right < 300 and distance_left < 300 and distance_left+distance_right < 15:
            motor_dir = 40
            motor_esq = -39
        elif distance_right < 300 and distance_left < 300 and distance_left+distance_right >= 15:#acelera os dois lados
            if distance_left < 16:
                motor_dir = 40
                motor_esq = -40
            else:
                motor_dir = 40
                motor_esq = 40


    elif front_right > 0.1 or front_left > 0.1: ## foge na borda se oponente empurra
        motor_dir = -40
        motor_esq = 40

    else:
        motor_dir = 0
        motor_esq = 40

    right_speed = motor_dir
    left_speed = motor_esq

    return {
        'leftSpeed': left_speed,
        'rightSpeed': right_speed,
        'log': [
            { 'name': 'Front Left',  'value':   front_left,    'min': 0, 'max': 1 },
            { 'name': 'Front Right', 'value':   front_right,   'min': 0, 'max': 1 },
            { 'name': 'Distance Left', 'value': distance_left, 'min': 0, 'max': 300 }
        ]
    }